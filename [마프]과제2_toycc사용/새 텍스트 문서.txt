 - 파일은 크게 _CODE부분과 _DATA부분으로 구성되어있다. 
대부분의 컴파일러들은 이와 같은 구조로 C언어 프로그램을 컴파일한다.
 - _CODE부분 처음 부분에 program startup code로 주석처리가 되어있는 부분은
C언어 프로그램이 main 함수에서 취하는 프로그램 기능 시작과 스택 할당, 프로그램 종료에 대한 내용을 포함하고 있다.
 - main함수 시작부분의 어셈블리 코드들은 SP, FP, LP값을 조정하는 과정에 해당한다. 
 - 프로그램의 실질적인 기능은 while문 안에서 일어난다. _L2 부분은 while문의 조건과 실행내용, 조건을 만족하지 못하고 while문을 탈출할 경우에 어디로 PC가 어디로 실행위치를 옮겨야 하는지에 대해 정의되었다.
 - 전역변수 input에 입력받은 값이 저장되어있는 R0를 저장하고 check명령어를 사용하기 위해 R5의 값을 하나 줄여주어 인수를 푸시한다.
 - check 함수가 실행되기 전에 LINK 명령어로 함수가 끝난 후에 되돌아올 주소를 저장한다.
 - check로 실행위치를 옮기면서 스택포인트가 들어있는 R5의 값을 하나 늘려주어 check 함수가 호출되기 전으로 복구한다.
 - 또한 함수가 끝나면서 반환된 값이 들어있는 R0의 값을 프레임포인트인 R4를 이용하여 레지스터에 저장한다. 
 - putchar까지의 모든 작업은 while문 안에서 발생하므로 putchar까지 모두 끝났다면 BR 명령어로 다시 실행위치를 무조건 _L2 부분으로 돌아오게 한다.

 - _L1부분은 SP, FP, LP값을 복구하는 내용이다.

 - check 부분은 인수부분과 지역변수에 대한 스택을 할당하고 FP로 인수를 찾아내 조건문에 부합하도록 분기하여 지역변수가 있는 스택에 저장한다.
 - _L5에서 _L11까지의 부분은 짝수라면 *을 지역변수에 저장하는 어셈블리 코드이다.
 - _L13은 인수의 값을 지역변수에 저장한다.
 - _L6은 반환값을 저장하려고 만들었던 지역변수인 value의 값을 R0에 저장하여 값을 반환한다.
 - _L4는 스택프레임을 복구하고 LINK 명령어로 R6에 저장되어있던 주소로 다음 실행위치를 옮긴다.
 - _DATA부분엔 전역변수로 선언하였던 input이 레이블로 하나의 32비트 메모리를 할당된 상태로 컴파일 되었다.